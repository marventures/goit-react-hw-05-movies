{"version":3,"file":"static/js/231.3fff2e94.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://react-homework-template/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/themoviedb-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__wiIYs\"};","import css from './Button.module.css';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ text }) => {\n  return (\n    <button className={css.button} type=\"button\">\n      {text}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieDetailsContainer\":\"MovieDetailsPage_movieDetailsContainer__RRyXo\"};","import { useEffect, useState, useRef, Suspense } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from '../../services/themoviedb-api';\nimport { Button } from 'components/Button/Button';\nimport { Loader } from 'components/Loader/Loader';\nimport css from './MovieDetailsPage.module.css';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from || '/');\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const movie = await fetchMovieDetails(movieId);\n        setMovieDetails(movie);\n      } catch (error) {\n        console.error(error);\n      }\n    })();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      <Link to={backLinkHref.current}>\n        <Button text=\"â¬… Go back\" />\n      </Link>\n\n      <div className={css.movieDetailsContainer}>\n        <img\n          className={css.image}\n          src={\n            movieDetails.poster_path\n              ? `https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`\n              : `https://fakeimg.pl/600x400?text=No+Image+Available`\n          }\n          alt={movieDetails.title}\n        />\n        <div className={css.movieDetailsWrap}>\n          <h1>{movieDetails.title}</h1>\n          <h4>User score: {Math.round(movieDetails.vote_average * 10)}%</h4>\n          <h2>Overview</h2>\n          <p>{movieDetails.overview}</p>\n          <h2>Genres</h2>\n          <p>\n            {movieDetails.genres.map(genre => (\n              <span key={genre.id}> {genre.name}</span>\n            ))}\n          </p>\n        </div>\n      </div>\n\n      <hr />\n      <h3>Additional information</h3>\n      <Link to=\"cast\">\n        <Button text=\"Cast\" />\n      </Link>\n      <Link to=\"reviews\">\n        <Button text=\"Reviews\" />\n      </Link>\n      <hr />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\n// PLEASE USE YOUR OWN API KEY HERE\nconst API_KEY = '9f83c5097d4c9aeee6c8b72b3b142cd0';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\n// REFERENCE: https://developer.themoviedb.org/reference/trending-movies\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`);\n  return response.data.results;\n};\n\n// REFERENCE: https://developer.themoviedb.org/reference/search-movie\nexport const fetchMovieByQuery = async movieName => {\n  const response = await axios.get(`search/movie?query=${movieName}`);\n  return response.data.results;\n};\n\n// REFERENCE: https://developer.themoviedb.org/reference/movie-details\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}`);\n  return response.data;\n};\n\n// REFERENCE: https://developer.themoviedb.org/reference/movie-credits\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`);\n  return response.data.cast;\n};\n\n// REFERENCE: https://developer.themoviedb.org/reference/movie-reviews\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`);\n  return response.data.results;\n};\n"],"names":["Button","_ref","text","_jsx","className","css","type","children","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","location","useLocation","backLinkHref","useRef","state","from","useEffect","_asyncToGenerator","_regeneratorRuntime","_callee","movie","_context","prev","next","fetchMovieDetails","sent","t0","console","error","stop","_jsxs","_Fragment","Link","to","current","src","poster_path","concat","alt","title","Math","round","vote_average","overview","genres","map","genre","name","id","Suspense","fallback","Loader","Outlet","axios","api_key","fetchTrendingMovies","response","abrupt","data","results","apply","arguments","fetchMovieByQuery","_ref2","_callee2","movieName","_context2","_x","_ref3","_callee3","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}